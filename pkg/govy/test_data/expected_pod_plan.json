{
  "name": "Pod",
  "properties": [
    {
      "path": "$.apiVersion",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "values": [
        "v1",
        "v2"
      ],
      "rules": [
        {
          "description": "must be one of: v1, v2",
          "errorCode": "one_of"
        }
      ]
    },
    {
      "path": "$.kind",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "values": [
        "Pod"
      ],
      "rules": [
        {
          "description": "should be equal to 'Pod'",
          "errorCode": "equal_to"
        }
      ]
    },
    {
      "path": "$.metadata.annotations",
      "typeInfo": {
        "name": "Annotations",
        "kind": "map[string]string",
        "package": "github.com/nobl9/govy/pkg/govy_test"
      },
      "rules": [
        {
          "description": "length must be less than or equal to 10",
          "errorCode": "map_max_length"
        }
      ]
    },
    {
      "path": "$.metadata.annotations.*",
      "typeInfo": {
        "name": "MapItem[string,string]",
        "kind": "struct",
        "package": "github.com/nobl9/govy/pkg/govy"
      },
      "rules": [
        {
          "description": "key and value must not be equal"
        }
      ]
    },
    {
      "path": "$.metadata.labels",
      "typeInfo": {
        "name": "Labels",
        "kind": "map[string]string",
        "package": "github.com/nobl9/govy/pkg/govy_test"
      },
      "rules": [
        {
          "description": "length must be less than or equal to 10",
          "errorCode": "map_max_length"
        }
      ]
    },
    {
      "path": "$.metadata.labels.*",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "rules": [
        {
          "description": "length must be less than or equal to 120",
          "errorCode": "string_max_length"
        }
      ]
    },
    {
      "path": "$.metadata.labels.~",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "rules": [
        {
          "description": "length must be between 1 and 63",
          "errorCode": "string_dns_label:string_length"
        },
        {
          "description": "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'",
          "details": "an RFC-1123 compliant label name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character",
          "errorCode": "string_dns_label:string_match_regexp",
          "examples": [
            "my-name",
            "123-abc"
          ]
        }
      ]
    },
    {
      "path": "$.metadata.name",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "rules": [
        {
          "description": "string cannot be empty",
          "errorCode": "string_not_empty"
        }
      ]
    },
    {
      "path": "$.metadata.namespace",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "rules": [
        {
          "description": "string cannot be empty",
          "errorCode": "string_not_empty"
        }
      ]
    },
    {
      "path": "$.spec.containers",
      "typeInfo": {
        "name": "[]Container",
        "kind": "[]struct",
        "package": "github.com/nobl9/govy/pkg/govy_test"
      },
      "rules": [
        {
          "description": "length must be less than or equal to 10",
          "errorCode": "slice_max_length"
        },
        {
          "description": "elements must be unique",
          "errorCode": "slice_unique"
        }
      ]
    },
    {
      "path": "$.spec.containers[*].env",
      "typeInfo": {
        "name": "[]EnvVar",
        "kind": "[]struct",
        "package": "github.com/nobl9/govy/pkg/govy_test"
      }
    },
    {
      "path": "$.spec.containers[*].env[*]",
      "typeInfo": {
        "name": "EnvVar",
        "kind": "struct",
        "package": "github.com/nobl9/govy/pkg/govy_test"
      },
      "rules": [
        {
          "description": "custom error!"
        }
      ]
    },
    {
      "path": "$.spec.containers[*].image",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "rules": [
        {
          "description": "string cannot be empty",
          "errorCode": "string_not_empty"
        }
      ]
    },
    {
      "path": "$.spec.containers[*].name",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "rules": [
        {
          "description": "length must be between 1 and 63",
          "errorCode": "string_dns_label:string_length"
        },
        {
          "description": "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'",
          "details": "an RFC-1123 compliant label name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character",
          "errorCode": "string_dns_label:string_match_regexp",
          "examples": [
            "my-name",
            "123-abc"
          ]
        }
      ]
    },
    {
      "path": "$.spec.dnsPolicy",
      "typeInfo": {
        "name": "string",
        "kind": "string"
      },
      "values": [
        "ClusterFirst",
        "Default"
      ],
      "rules": [
        {
          "description": "must be one of: ClusterFirst, Default",
          "errorCode": "one_of"
        }
      ]
    }
  ]
}
